name: api_yamdb workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r api_yamdb/requirements.txt
    - name: Test with pytest
      run: pytest ./tests/

    - name: Test with flake8 and django tests
      run: |
        python -m flake8
        cd api_yamdb/
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.7.0
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: api_yamdb
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/yamdb_final

  deploy:
    name: Deploy to remote server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo docker pull lesash13/yamdb_final
          sudo docker-compose down -v
          sudo docker-compose stop
          sudo docker-compose rm web
          touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          sudo docker-compose up -d --build
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@v0.1.1
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!

#name: yamdb-final
#
#on: [push]
#
#jobs:
#  tests:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.7
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort pytest
#        pip install -r api_yamdb/requirements.txt
#
#    - name: Test with flake8
#      run: |
#        python -m flake8
#    - name: Run tests
#      run: pytest
#  build_and_push_to_docker_hub:
#      name: Push Docker image to Docker Hub
#      runs-on: ubuntu-latest
#      needs: tests
#      steps:
#        - name: Check out the repo
#          uses: actions/checkout@v2
#        - name: Set up Docker Buildx
#          uses: docker/setup-buildx-action@v1
#        - name: Login to Docker
#          uses: docker/login-action@v1
#          with:
#            username: ${{ secrets.DOCKER_USERNAME }}
#            password: ${{ secrets.DOCKER_PASSWORD }}
#        - name: Push to Docker Hub
#          uses: docker/build-push-action@v2
#          with:
#            push: true
#            tags: nuclear0077/api_yamdb:latest
#            context: api_yamdb
#            dockerfile: Dockerfile
#
#  deploy:
#      runs-on: ubuntu-latest
#      needs: build_and_push_to_docker_hub
#      if: ${{ github.ref == 'ref/heads/main' }}&
#      steps:
#        - name: executing remote ssh commands to deploy
#          uses: appleboy/ssh-action@master
#          with:
#            host: ${{ secrets.HOST }}
#            username: ${{ secrets.USER }}
#            key: ${{ secrets.SSH_KEY }}
#            passphrase: ${{ secrets.PASSPHRASE }}
#            script: |
#              sudo docker-compose stop
#              sudo docker-compose rm api_yamdb_web
#              touch .env
#              echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
#              echo DB_NAME=${{ secrets.DB_NAME }} >> .env
#              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
#              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
#              echo DB_HOST=${{ secrets.DB_HOST }} >> .env
#              echo DB_PORT=${{ secrets.DB_PORT }} >> .env
#              echo MAILCATCHER_SMTP_PORT=${{ secrets.MAILCATCHER_SMTP_PORT }} >> .env
#              echo MAILCATCHER_HTTP_PORT=${{ secrets.MAILCATCHER_HTTP_PORT }} >> .env
#              echo COMPOSE_PROJECT_NAME=${{ secrets.COMPOSE_PROJECT_NAME }} >> .env
#              sudo docker-compose up -d
#
#  send_message:
#    runs-on: ubuntu-latest
#    needs: deploy
#    steps:
#      - name: send message
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_TO }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          message: ${{ github.workflow }} успешно выполнен!